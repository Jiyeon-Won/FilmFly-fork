# github repository actions 페이지에 나타날 이름
name: Deploy - CI/CD Pipeline

# event trigger
# main이나 develop 브랜치에 push가 되었을 때 실행
on:
  push:
    # dev 나 main 으로 push 를 하거나
    branches:
      - main
      - 346-feat-front-s3-deploy
    # dev 가 pull request 를 생성시
#  pull_request:
#    branches:
#      - dev
#env:
#  DOCKER_IMAGE_TAG_NAME: film-fly
#  AWS_REGION: ap-northeast-2

jobs:
  build-and-deploy-front:
    # 실행 환경
    runs-on: ubuntu-latest
    env: # 환경변수 설정
      BUCKET: filmfly-front # 버켓이름
#      DIST: build # 빌드 파일 이름
      DIST_ID: E3EF5YXBWSCLY6  # Cloud Front 배포 파일의 식별자

    steps: # build-and-deploy 워크 플로 작업 실행 시 순차적으로 실행할 작업의 순서

      # 1. 단계 | 깃허브 리포지토리 접근
      - name: Checkout # 작업 이름
        uses: actions/checkout@v4 # 워크 플로 작업을 위한 저장소 액세스를 위한 도구

      # 2. 단계 | AWS 자격증명 구성 및 AWS CLI 설치
      # 참고 | https://docs.github.com/ko/actions/learn-github-actions/contexts#secrets-context
      # https://github.com/aws-actions/configure-aws-credentials/tree/v4/
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.REGION }}


      # 6. 단계 | AWS CLI 를 사용하여 S3 에 배포 파일을 복사(즉, 업로드)
      - name: Copy files to the production website with the AWS CLI
        run: |
          aws s3 cp front/html/index.html s3://${{env.BUCKET}}/html/index.html
#          aws s3 sync --delete ${{env.DIST}} s3://${{env.BUCKET}}

      # 7. 단계 | 캐시 무효화 : 즉, 이전 정적 파일 캐시 버리고, 새로 업로드된 파일이 보이도록
      - name: Clear Cash
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.DIST_ID}} \
            --paths "/*"


#      #.3. 단계 | 프로젝트 관련 종속성을 설치할 노드 설치
#      - uses: actions/setup-node@v4
#        with:
#          node-version: '20'
#
#      # 4. 단계 | 종속성 설치(node_modules)
#      - name: Install Dependencies
#        run: |
#          node --version
#          npm ci          # OR 타입스크립트 안 쓰면 npm ci --production
#
#      # 5. 단계 | 정적 파일 빌드(build 생성)
#      - name: Build
#        run: npm run build

#    steps:
#      # SOURCE 단계 - 저장소 Checkout
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#          aws-region: ap-northeast-2  # AWS 리전 설정
#
#      - name: Sync files to S3
#        run: aws s3 sync front/html s3://filmfly-front/test
#
#      - name: Upload to S3
#        uses: jakejarvis/s3-sync-action@v0.5.1
#        with:
#          args: --delete
#        env:
#          SOURCE_DIR: "front/html"
#          DEST_DIR: "dist"
#          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
#          AWS_REGION: ${{ env.AWS_REGION }}
