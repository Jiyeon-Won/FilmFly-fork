### 테스트에 사용할 데이터
@username1 = user1
@password1 = Test123!

### USER 로그인
POST http://localhost:8080/users/login
Content-Type: application/json

{
  "username" : "{{username1}}",
  "password": "{{password1}}"
}

> {% client.global.set("USER_TOKEN", response.headers.valueOf("Authorization"));
    client.global.set("USER_REFRESH_TOKEN", response.headers.valueOf("REFRESH_TOKEN_HEADER")); %}

### 보드 생성 + 파일 (작동x,  postman form data 사용)
POST http://localhost:8080/boards
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW
Authorization:{{USER_TOKEN}}

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="boardRequestDto"
Content-Type: application/json

{
  "title": "제목11",
  "content": "내용22"
}
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="files"; filename="펭귄.jpg"
Content-Type: image/jpeg

< ../../main/resources/static/images/펭귄.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--

### 보드 조회
GET http://localhost:8080/boards/1

### 보드 페이징 조회
GET http://localhost:8080/boards?pageNum=1&size=5

### 보드 수정 (작동x,  postman form data 사용)
PATCH http://localhost:8080/boards/1
Content-Type: application/json
Authorization:{{USER_TOKEN}}

{
  "title": "게시판 제목 수정1",
  "content": "게시판 내용 수정12345"
}

### 보드 삭제
DELETE http://localhost:8080/boards/1
Content-Type: application/json
Authorization:{{USER_TOKEN}}

{
  "title": "게시판 제목 수정1",
  "content": "게시판 내용 수정12345"
}